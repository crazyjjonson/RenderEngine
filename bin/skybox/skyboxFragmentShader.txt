#version 330

in vec3 textureCoords;

layout (location = 0) out vec4 out_Color;
layout (location = 1) out vec4 out_BrightColour;
layout (location = 2) out vec4 out_LightShaftColour;

uniform samplerCube cubeMap;
uniform samplerCube cubeMap2;
uniform float blendFactor;
uniform vec3 fogColour;

const float lowerLimit = 0.0;
const float upperLimit = 30.0;

void main(void){
	vec4 texture1 = texture(cubeMap, textureCoords);
	vec4 texture2 = texture(cubeMap2, textureCoords);
    vec4 finalColour = mix(texture1, texture2, blendFactor);
    
    float factor = (textureCoords.y - lowerLimit) / (upperLimit - lowerLimit);
    factor = clamp(factor, 0.0, 1.0);
    out_Color = finalColour;
    
    float brightness = out_Color.r * 0.2126 + out_Color.g * 0.7152 + out_Color.b * 0.0722;
	out_BrightColour = out_Color * brightness;
	out_LightShaftColour = vec4(0.0, 0.0, 0.0, 1.0);
}